#!/bin/bash

DeclarePlugin Config pkgRepo:on "
	cmd_run:    pkgRepo::run:on
	goal: TODO: <write goal text for this Config plugin>
"

# This function is the declarative code that defines the unit of configuration that the Config Plugin implements
# Typically, it should contain only cr_ statements and should avoid side affects. Any valid bash syntax is allowed
function pkgRepo::run:on() {
	# get the parameters from the domConfig system. There are reasonable defaults for all
	local domain;             configGet -R domain               .       domain          "localhost"
	local repoUpstream;       configGet -R repoUpstream         pkgRepo upstream        "mirrors.edge.kernel.org"

	local repoRoot;           configGet -R repoRoot             pkgRepo root            "/var/lib/bg-pkgRepo"
	local repoChannels;       configGet -R repoChannels         pkgRepo channels        "focal focal-updates focal-backports focal-security" ; repoChannels=(     $repoChannels)
	local repoComponents;     configGet -R repoComponents       pkgRepo components      "main restricted universe multiverse"  ; repoComponents=(   $repoComponents)
	local repoArchitectures;  configGet -R repoArchitectures    pkgRepo architectures   "amd64"                                ; repoArchitectures=($repoArchitectures)
	local repoLanguages;      configGet -R repoLanguages        pkgRepo languages       "en"                                   ; repoLanguages=($repoLanguages)
	local repoServerName;     configGet -R repoServerName       pkgRepo serverName      "pkgrepo.$domain"

	local repoDefSection;     configGet -R repoDefSection       pkgRepo defSection      "dcim"

	### Dependant Packages
	creq cr_packageInstalled inotify-tools
	creq cr_packageInstalled nginx-light


	### User Config
	creq cr_systemGroupExists "pkgrepogroup"
	creq cr_systemUserExists -g"pkgrepogroup" "pkgrepouser"
	creq cr_systemUserIsInGroup "pkgrepouser" "pkgrepogroup"


	### Base Folders
	creq cr_fileObjHasAttributes -u pkgrepouser -g pkgrepogroup  --perm="d rwx rws r-x"  "${repoRoot}/www/ubuntu/dists"
	creq cr_fileObjHasAttributes -u pkgrepouser -g pkgrepogroup  --perm="d rwx rws r-x"  "${repoRoot}/staging"
	creq cr_fileObjHasAttributes -u pkgrepouser -g pkgrepogroup  --perm="d rwx rws r-x"  "${repoRoot}/incoming"

	creq cr_fileExists ${repoRoot}/README.txt "
		www/            : is the documentroot of the web server. Files are served first from this folder tree and then by the reverse
		                  proxy to the repoUpstream
		staging/        : is a working folder for updates. New indexes from repoUpstream are stored here.
		incoming/       : is a folder for new package submissions from the local domain.
		cache/          : is created and maintained by the nginx proxy_pass module. Its path is specified in the wwwVhost.nginx.pkgRepo template
		"

	local channel component arch
	for channel in "${repoChannels[@]}"; do
		creq cr_fileObjHasAttributes -u pkgrepouser -g pkgrepogroup  --perm="d rwx rws r-x"  "${repoRoot}/www/ubuntu/dists/$channel/"
		for component in "${repoComponents[@]}"; do
			creq cr_fileObjHasAttributes -u pkgrepouser -g pkgrepogroup  --perm="d rwx rws r-x"  "${repoRoot}/www/ubuntu/dists/$channel/$component/"
			for arch in "${repoArchitectures[@]}"; do
				creq cr_fileObjHasAttributes -u pkgrepouser -g pkgrepogroup  --perm="d rwx rws r-x"  "${repoRoot}/www/ubuntu/dists/$channel/$component/binary-$arch/"
			done
		done
	done


	### Web Server Config
	creq cr_templateIsExpanded -c webPage.repoGreetings  "$repoRoot/www/index.html"
	creqsTrackChangesStart -s nginx
	creq cr_templateIsExpanded -c wwwVHost.nginx.pkgRepo /etc/nginx/sites-available/pkgRepo.conf
	creq cr_configDropinCntr /etc/nginx/sites-enabled /etc/nginx/sites-available pkgRepo.conf enable
	creqsTrackChangesStop -s nginx
}


DeclarePlugin Config pkgRepo:off "
	cmd_run:    pkgRepo::run:off
	goal: TODO: <write goal text for this Config plugin>
"

function pkgRepo::run:off() {
	creqsTrackChangesStart -s nginx:reload
	creq cr_configDropinCntr /etc/nginx/sites-enabled /etc/nginx/sites-available pkgRepo.conf disable
	creqsTrackChangesStop -s nginx
}
